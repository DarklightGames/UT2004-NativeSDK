/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif

#ifndef MUSICDOWNLOADER_API
#define MUSICDOWNLOADER_API DLL_IMPORT
#endif

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern MUSICDOWNLOADER_API FName MUSICDOWNLOADER_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif

AUTOGENERATE_NAME(DownloadCancelled)
AUTOGENERATE_NAME(DownloadComplete)
AUTOGENERATE_NAME(DownloadError)

#ifndef NAMES_ONLY


struct UMusicDownloaderInteraction_eventDownloadComplete_Parms
{
    FString URL;
    FString MusicName;
};
struct UMusicDownloaderInteraction_eventDownloadCancelled_Parms
{
    FString URL;
    FString MusicName;
};
struct UMusicDownloaderInteraction_eventDownloadError_Parms
{
    FString URL;
    FString MusicName;
};
class MUSICDOWNLOADER_API UMusicDownloaderInteraction : public UInteraction
{
public:
    INT LastBroadcastedPct GCC_PACK(4);
    FLOAT TimeSinceLastBroadcast;
    FStringNoInit LastBroadcastedName;
    class AMusicDownloaderLoader* Loader;
    DECLARE_FUNCTION(execGetDownloadStatus);
    DECLARE_FUNCTION(execCancelDownload);
    DECLARE_FUNCTION(execDownloadMusic);
    DECLARE_FUNCTION(execIsDownloading);
    DECLARE_FUNCTION(execIsMusicDownloaded);
    DECLARE_FUNCTION(execNativeTick);
    void eventDownloadComplete(const FString& URL, const FString& MusicName)
    {
        UMusicDownloaderInteraction_eventDownloadComplete_Parms Parms;
        Parms.URL=URL;
        Parms.MusicName=MusicName;
        ProcessEvent(FindFunctionChecked(MUSICDOWNLOADER_DownloadComplete),&Parms);
    }
    void eventDownloadCancelled(const FString& URL, const FString& MusicName)
    {
        UMusicDownloaderInteraction_eventDownloadCancelled_Parms Parms;
        Parms.URL=URL;
        Parms.MusicName=MusicName;
        ProcessEvent(FindFunctionChecked(MUSICDOWNLOADER_DownloadCancelled),&Parms);
    }
    void eventDownloadError(const FString& URL, const FString& MusicName)
    {
        UMusicDownloaderInteraction_eventDownloadError_Parms Parms;
        Parms.URL=URL;
        Parms.MusicName=MusicName;
        ProcessEvent(FindFunctionChecked(MUSICDOWNLOADER_DownloadError),&Parms);
    }
    DECLARE_CLASS(UMusicDownloaderInteraction,UInteraction,0,MusicDownloader)
    UMusicDownloaderInteraction();
    void DlReset();
};

#endif

AUTOGENERATE_FUNCTION(UMusicDownloaderInteraction,3205,execGetDownloadStatus);
AUTOGENERATE_FUNCTION(UMusicDownloaderInteraction,3204,execCancelDownload);
AUTOGENERATE_FUNCTION(UMusicDownloaderInteraction,3203,execDownloadMusic);
AUTOGENERATE_FUNCTION(UMusicDownloaderInteraction,3202,execIsDownloading);
AUTOGENERATE_FUNCTION(UMusicDownloaderInteraction,3201,execIsMusicDownloaded);
AUTOGENERATE_FUNCTION(UMusicDownloaderInteraction,3200,execNativeTick);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif


#ifdef NATIVE_DEFS_ONLY
DECLARE_NATIVE_TYPE(MusicDownloader,UMusicDownloaderInteraction);

#define AUTO_INITIALIZE_REGISTRANTS_MUSICDOWNLOADER \
	UMusicDownloaderInteraction::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindMusicDownloaderUMusicDownloaderInteractionNative; \

#endif // NATIVE_DEFS_ONLY

#ifdef NATIVES_ONLY
NATIVE_INFO(UMusicDownloaderInteraction) GMusicDownloaderUMusicDownloaderInteractionNatives[] = 
{ 
	MAP_NATIVE(UMusicDownloaderInteraction,execGetDownloadStatus)
	MAP_NATIVE(UMusicDownloaderInteraction,execCancelDownload)
	MAP_NATIVE(UMusicDownloaderInteraction,execDownloadMusic)
	MAP_NATIVE(UMusicDownloaderInteraction,execIsDownloading)
	MAP_NATIVE(UMusicDownloaderInteraction,execIsMusicDownloaded)
	MAP_NATIVE(UMusicDownloaderInteraction,execNativeTick)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(MusicDownloader,UMusicDownloaderInteraction);

#endif // NATIVES_ONLY

#ifdef VERIFY_CLASS_SIZES
VERIFY_CLASS_SIZE_NODIE(UMusicDownloaderInteraction)
#endif // VERIFY_CLASS_SIZES
